[
  {
    "id": 1,
    "nombre": "Aplicación ToDoList con ReactJS",
    "descripcion": "Aplicación ToDo realizado con ReactJS, para aprender sobre los React Hooks y el manejo de estado. Se desarrolló un CRUD de tareas, con la posibilidad de agregar, eliminar, editar y marcar como completada una tarea. Además de la implementación de estilos con Css.",
    "tecnologias": ["ReactJS", "Css", "Javascript", "TypeScript"],
    "repositorio": ["https://github.com/Neira21/react-todo-usereducer", "https://github.com/Neira21/app-todo", "https://github.com/Neira21/ListaTareas-react-typescript"],
    "comentario": "Proyecto Personal, para aprender acerca de ReactJS y su estructura basado en componentes. Después de aprender html, css y javascript, decidí aprender ReactJS para poder crear aplicaciones web más complejas y dinámicas. Entre las hooks aprendidos fueron: useState, useEffect, useRef, useReducer y entre otros",
    "website": ["https://neira21.github.io/app-todo/", "https://neira21.github.io/react-todo-usereducer/", "https://neira21.github.io/ListaTareas-react-typescript/"],
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczNlnt2cmjZK6QKQe53AkrGp0mRuJEPK-8aW9r4srXdKkN8SdYO8COSBW7rcPku_Dj0Qxyg4lNh_NO45_hTOZXmAhYKUyV4CRZ304VrLR-JtP7k45l_IkZFeVdJ6UvoDgw2lkuUS0UESzSAJt4QRXEsFeMQPvS8Jfiyw40bL6JMeZp-vxHopF-qZlVcYavBPVbkImKq8lXiGFcmAs8HP6KFod4oEABrACTDKtxxBGTvbnjsDo1v2ilqBSqYI037-fMOh_QPxoHAQzL_R-DAL8kbbL0W5G6cIzX6P0SDA6b6OGOHEP4oOadUA2siwx_vEDqD3csb-XRQyz732yKBGsVTeO4n1YDJDxcnh_78S39DMqzbfxGT3-yNnvVB-MjuSTCJBG9VHutoKrBQnXRJJnzO6fdFQG2UDThxirzCIqeEGqLvGH_-W-uLVGAe-zFvUAfXoJEgD3qRJFEIH-V8CJNPQwaH6sMEkZHIDfgbg3FqnRJ4YT6Fmo9LqJTUkaunTnHcOJwq54uVUpiA9Y7fXdYhECc-WYjrOr-utX03IdULB8_K7xVGTMxPI7F1wTo8joJu9_9d9nDCeRVA6LEGInBDP6KTFtjsckFDGUqCFlcriLJ2ot5vcw2cq8F2u5HXppCNOA0L0XkD8TzWnmsM3wAicPfJDZ9V1Js54lsSD1leMRiudm5YSx72PkDyetrIahH5KXrQH6GWvMNOS96wrrZVP3389tEVo5LrFjSaSQlWT2dhaUg_-nIClc5sf8DfPrtNo8xEiICvunVF-ZjjPRyuEsE2bmUefKf301it-uEfMGFkg2uCvY3SNwt0V2LXweowBX6Hx4R-LTKLqGoPxW6AY9XaW95h_64WAPQykjLH19BEoft44rI79zMDkjT5MhtAnegI2nGuD7TzcY9IQ2hEMYpjHzCXqlWmX7bjMqzTKRhLOa00NaVnfBw=w1575-h768-s-no-gm?authuser=0"
  },
  {
    "id": 2,
    "nombre": "Aplicación de Clima - AppClima",
    "descripcion": "Aplicación del clima realizada con ReactJS, para aprender sobre el consumo de una API. Se utilizó la API de OpenWeatherMap para obtener los datos del clima de una ciudad en específico. Se implementó un buscador de ciudades, para obtener el clima de la ciudad deseada. Se aprendió a utilizar las herramientas para consumir una API, por ejemplo fetch o axios.",
    "tecnologias": ["ReactJS", "Css", "Javascript"],
    "repositorio": ["https://github.com/Neira21/app-clima"],
    "comentario": "Primer proyecto en la que se usa un api, se aprendió a consumir una api y a mostrar los datos en la pantalla, en este caso obtener el clima de una ciudad en específico.",
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczPuh8cea6ORXH_nZvXw5wBJ2eXFHthk_HPi5Mr8GiSHTiw9_6LOYyMJniXZXIAqXa354m2nIWE7OR1ab_BKeY_vj5tVN4PiX514sZkw6ekP091Rlro32mf7gqPxccWBxsnVkJs15lbQpol0wf3RWdcx6CTi1qOcBWqfs5xh9UbfEWHjKIPelQ_LtffjIs4G8qQeS7V6zNdhGJyTZTh3VkbwBIQ-yv6jiNvn6hEMbnd3PA7-eknLc0-i68gUtgNvwGamg8A4F4v6tB5AmhtNu0uhro4kf3rl3omrdOjVrvFSmE5qR62_wm9RHITnDpyeGkKqDqYEARMj6Do67bljnovPHrnQSTEPN_ffzwQy6FKbU-cT2a4oBFQGHeW8jyAI3FscpeUzHnHA_A-K9VZCVYtujVrYYu8CUfHGfOL9Aei38ohn9xfrcqxGKTGTnUNyxwywD9dztfqM7PcDTEwJH00jl3csHlhSqvEbO3a-5Z0KSF115LeolYZhJH4g1m-YEfKZsXlUquSprV5zGE-yWr91PSCiMp13WKlfXzih_jBlVjW2YO9xvWe_3obTQ3QNX40tZJokJOpquK69oUBRah9ddWbvs5OiMZiGzMDq0o-RCQlzK-SPSnMhX9hSY-b60Z399qyKQrzwRula5BpgdEOHteFXQfwXvO0IQ7DgOFMxqzse-Gfw-Sfgbp_qN8UvowSWUF-xoKSCtydf6Y2z2E64_l0LtjNITPeGVcBG6m8Jl_Qph67cPKHYxVP67XXvuynK-z3QOsWc8dOQFxJOFYNQCViAnQH5DqIvXytCg0z_oheGRe6nxILVgcIuLd5zvKDJhiSKNq-zpUYyDKbNnIwYcXnQWYvXR-_ftpgC7LUDbJbylKhMiwuRg6O5rrgUlKJ0dwaB8L4qhlFjPl74-yRAFgasJLKPPTKbcQ4R44FAcTHSwjhIcFTIzTA=w1786-h894-s-no-gm?authuser=0"
  },
  {
    "id": 3,
    "nombre": "FrontEnd Tienda Virtual - app-store",
    "descripcion": "FrontEnd de una tienda virtual, realizado con ReactJS, para aprender sobre el manejo de filtros (filtro por nombre, precio y categoría), además de agregar un carrito de compras el cual se puede agregar y eliminar productos, y calcular el total de la compra.",
    "tecnologias": ["ReactJS", "Javascript", "Css"],
    "repositorio": ["https://github.com/Neira21/app-store"],
    "comentario": "Proyecto para simular una tienda virtual y agregar los productos al carrito de compras, se aprendió el uso de Context para el manejo de estados globales. Más adelante se implementará el backend para poder realizar la compra de los productos usando las herramientas necesarias.",
    "website": ["https://neira21.github.io/app-store/"],
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczOegLQ4pYTVwNMvhd4GoiX279YM-zC9YvekckPCGcMWKJjEgPb7e6w_w90y5p15izabj1D7N_SDnoE9FcCnZLMAucBzrraNLUk0EW2S07UDio3vcN2r43BS5a8pSRdPSmhpbtPdxT78zirEaepZzsNPQsWX2RKiPlpdrbtm0ANh6WIec2HzzIdDHfEwS4Tmzz1vJMxqOR92l2DurRwgIgZtTZWfWXhx6VN2P6OJc1wtV8BtNRPi_mLGK6m-oTZ5iZ2LOTC0F_32DW6Ea10IfTJ33lnmdVCnKa_54uvEU9m87pTVlKxLwSjeDGmfgTlXGL0YaEGZkVJD-NC1Xy9W1mwl4KK7W40qSl9UjDsTSfIJwTAYTfuveE1xzt6nmqFplxZLJ3YP6lGPxjkctRuVaHJzVZoZ6Os3ZIhWkLCX-y6gPd3l7BAJbgIQR0OjcuGy6u7C_xm6qGuUmBRFuJ_SZboK9meKEyBp2dUYH7lkGcJXzUHZ_ZMt04-BZgheec3PGWzJM6hoq0rGCHZbFHSYQZAhD4pMp9E-8M6kw-RwgFlZ-5JYrvmmf1L3Hjey9OJzgd2weKx_Tk3bhUXrONQcK3v4KHhqyPlIMZMkLf4BJisgw3vF_lFlO-xh1SocUltL-gnHr3oYPmPb0B4mbRe_qNf-x7_RShnhEmazVzhmylLcgFuu7582UZKdNqwNNFpMI8VNvPD-PhOamKqmPAOuuid8JdFF8VfhbViN93xdGHdxfzWc4NUc9VGrnN68_ZmeiI7HtufaXIsDi6Ues2ywdh8DvjoGWAmkrgRL2itSNCO7TEqWEp2H9nRungXviPb_lALN9tvJ3ysgdngmXOz_je6KK68WFK9lhHO7Dz_Z7s0_fiLw9kNWMnp_8IkBgCYX8NFr7Ow9a5t7w7A9GO7mt85IV9uPGXoEKI6t0So92eEZF_aUiK9WKBgnyg=w1758-h894-s-no-gm?authuser=0"
  },
  {
    "id": 4,
    "nombre": "Aplicación TMDB - app-peliculas-tmdb",
    "descripcion": "Aplicación de películas realizada con ReactJS, utilizando la API de The Movie Database (TMDB). Con buscador de películas, se puede seleccionar si se quiere buscar series o películas, se puede ver el detalle de pelicula y agregar una calificacion, luego en otra seccion se puede ver el ranking de las peliculas dado por el usuario,",
    "tecnologias": ["Html", "Css", "Javascript"],
    "repositorio": ["https://github.com/Neira21/app-peliculas-tmbd", "https://github.com/Neira21/app-react-movietmdb-vite"],
    "comentario": "Se aprendió a consumir una API y a mostrar los datos en la pantalla. Además de aprender a utilizar React Router DOM para la navegación entre páginas. Se podría mejorar el proyecto añadiendo un login de usuario para que cada usuario pueda tener su lista de películas calificadas.",
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczPpYUmAMMnLUowxCUTH7WEn0hyEfaVZkXsuqocpz8yqhAm0BSoY1mkX2Y8Z2mOTu8r_EeG-0HGL0pwpK3SawSosTvQ6NCdi7-tJ6LC64pHjVCFpPgUnQy2UAv9F_mYu5io853tPN8Y4sfUjypvdJvio6k_EpaDaBKB04thNoP9c9EZwlwrSfpUPXMvuCn-K8FaN8hXbz1YfrjXvN4ApQTUwduNRvUvY0PvGYZ2-d5wbJGZn-dAwMryoyQu5hMYS8kIWHU4LgazvSFKp23Ro5bDXy3moZHCoVfxTWefqNTrgt9efMg2aPdv3-ixO5XsEkzXNIeZj3p66Bz962NWygXxo1Kni77J_FFnOaoNIELz4dIaBM6F5BSvhhlXivyWn5LsHvygSZLMY0395Yn6YELi-fKcu6DZLlJ_V5YwQ9iP8jjwV7lfTkJWec0YO5z-puHoJRa7N6sOK7LCb9raIeLLFUxUIsRo26p1B1LPayRWIwwQE5PI70HdYSODsVTYz99w7ohgxtx87xLlWpUC50-ywvbt67OgXlhHsnZOHZyyKdngDA1T5HfpgqefUVAybxY4c8edXadXzLQxXvPg1qTxbFOa6CXGmiKEgjTI3SaZ1Hj6BprtNRBYQ8SiuEu_Qv6MGjWV3ISqP5qK9dGIsJnB_0EU7cB8vmqfpeEgOZwVFzvrgQfUmIZYGQFNFj4mWk6KSGi988yUyGgxBHRKVT4HfWNOXF-TOKd82bgJZ0y7sOUbeHiO6sW2BxSvObGpZl42JjSGzthMRfKYd86thiNt_2v9o1CA_8VKtRu1raPgbd9bTeXl_Kva-ZDfvFuJ5OZOk2tEtWrsf_VtLM-R8JxvdKozHibUI3Su3W4BA9Ao8htSBN-yrCIsEPNBmgPXDo3D3NITx9kYVuFpzHJgqrQoj7BN2_k2auQ2yq_Q7_voNNz-GOU_fMuzLAdU=w1770-h894-s-no-gm?authuser=0"
  },
  {
    "id": 5,
    "nombre": "Sistema de gestión de una Lavanderia",
    "descripcion": "Sistema de gestión de una lavandería, realizado con .Net Core. Se desarrolló un CRUD de clientes y empleados, un login de usuario quien será un empleado para acceder al sistema. Se puede crear servicios, listarlos, filtrarlo, generar boletas de pago, ver el estado del servicio y el estado de almacen de la lavandería",
    "tecnologias": [".NetCore", "c#", "Entity Framework", "sql server", "MVC"],
    "repositorio": ["https://github.com/Neira21/SwLavanderia-Desarrollo"],
    "comentario": "Proyecto de universidad para el curso de ingeniería de software 1 y 2, se puede mejorar primero haciendo una actualización del código usando una versión actual de .net que es la 8, la versión 3.1 ya es obsoleta por lo que hay problemas de compatibilidad con las nuevas versiones de visual studio.",
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczOhXu0JQEtO0FT7Bn35-qbMVuR_oF95WzRtIwKHG9UlYNAHx0EbnqL10R8rRQjSKshUajcjsjPYQmeDafscpvJ71Z068v_5VG8Q2UdYAvk8oj2OUpq1mTt0XM-bOR56okMfm45EdcsOwLisfeq18xy4V23I0_GiM4OWWUAHsOYAXN50N1fVXj0aZC6dckyxOTcPS4vG85Osxsk7EmAsUUouz6cL-4BV8sTltzXPa1Znw0KDwlq0Y50362P_1tATipEATJvFWjhFh6ZElK4MlDEO5uUuzsv-NynbMblukz3w4j4acjZHiQ554agwqqU-UpTJnFqWr_czrkBxAuUGwnhYTdlDd0VzzqCzmy4ZH9cSiOzF6Yo00gOao9kgFr75abvsAaqlW8UKmNYzDI7-l4TpUZy45lGcmS0mun0tWqcNSfWmMWXbZGLMCOWlxwDeGaw6AVdoVbDDkQaDyj3NgtIAn4e1f7vUAhUPB5za9okUARzSSopEQgBYUro3VPSgUpOWYj-HeS1W811lYPsNcDMPTron1Noy4KdE9X9pDs1gLj1XcBLbJw614IL0HA0T0B3OxBy78EuvJ1efwJkc2ZF26mcv6eFs-EtHAi_XH7CvculvKVgahrv5VojYIcH8MqynVyZQzseMVNsG6tslR9mJwnM7gBRWpMDmPM1H3AYSS8QlK-_-cTrFhtj8swYYOdq6_1QWzNmFEK3auhxV5zZwbHk8yCYohasuq4ORqq1_gHN_pR7ZnU4iggL_9u6uGiNdEgIpr-7JXi4L49jX5KjLC3bCfi-2UL35xG2NP8s9Xe3eSGC2tfwZCwd16bpGefTiF1h8abOHCwVagq3-o8J5mDNgGQWBl9xTtVb3Q4-oOKKXkf40E-zDe9PpniGLiRBzkPvChlmVK4N4hv9U_Epi-saSCvfWiOzj_5SOSDI9vNecdrn-4pNxv_k=w1794-h894-s-no-gm?authuser=0"

  },
  {
    "id": 6,
    "nombre": "MovieApp NetCore",
    "descripcion": "Aplicación de películas realizada con .Net Core 3.1, crud de peliculas y usuarios, login de usuario, los usuarios pueden agregar sus propias películas y ver las películas agregadas por otros usuarios, además de comentarios, calificación, noticias de películas, entre otros.",
    "tecnologias": [".NetCore", "Javascript", "c#", "Entity Framework", "postgresql", "Heroku", "MVC"],
    "repositorio": ["https://github.com/Neira21/MovieApp"],
    "comentario": "Fue un proyecto de universidad para el curso de programación 1 (6to ciclo), se aprendió a utilizar .net Core, la versión 3.1, se usó el ORM de Entity Framework para la conexión a la base de datos, y heroku para el despliegue de la aplicación y uso de la base de datos. Se podría mejorar actualizando el código a una versión más actual de .net, la versión 3.1 ya es obsoleta.",
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczMEjh8GTy0yqAJEoW8Be6t7xZd_xp9CTrM_rF9SbOwmrtQG1vMyGQ7DVgj74YVuNuOsvSMiOnZNegKXDeMByWqtHOF0c_obMprWpIwhF4lQ-isHqAc6gPFFvirPOeE3qCdWweUJ4KRh9Emt9IP4fvJuoWgsWH1KoRCFqoz1mZAt3TBFkjYBW0Nnt0zuf6wAdnBdrSPX0XWDV4MWJmox-rbcNP_LY_u6c7Yvh_y2wKPpToyDqpDOYOLMyrdjcikma0Ofva7fSjdd1YaJxP_hmp3VpiMlMxJML3oimsFYCG4rXraCRjjJ2tiPeygFALWnxijZ3JE7BXS33ufVFOGmQIPG3CbG9T6uymtwsqkFGMIjDy7nqGuMaWENbAZuqxcbB74tqXq4lauQOg7BOH8ZTXINZAnwXkiDpEd-wbUtPMewGfoWXTmYcgQyeXAGVRyz8bIS4k3RrjizqjgD047r5ttyTO5O9eS5Juj1MNi3qxG3z56M6MHLkkbL5sh-n8CppBh3I6eCECIx8cSOMHIUlNwbI_yueargNrSROCqekbVPUioy5j1nYawh3vDGPa7y-JZCK0xJSANHKbOVojFHmwxgoO65rUdufTJjHV6hLZTGzgea70Y7dmj4n9KN0AFhwp35g7PeTdrLpToYtbzKJZhoDB1GaKR8F6HEMQZIPlOpi54ZtZ3eDc77Hmmr66nMLO6DzffHZ8ChSUDd9iCcDtXJLnWZR3HFijlMCrugBPHsCb8aN9uE-qsKHK012x3pScnnUncJM0877Np0HYnHSPLN1qudnZ1YKWqyDNyynb9-Eqr6UJPh6wkftoKw6PiHw0Ci2Mdo7uNX6v_RsxJfed1Ox3OFf7mj4T9w6B7hmdJZ_rdpdkR7RpYaZFKCAooQZoBEu3kWgMim-IDUpHxJcCA9Ggh1hziL_j1BbYDgwpF4hbr5l52Wm2ScvTs=w1774-h894-s-no-gm?authuser=0"

  },
  {
    "id": 7,
    "nombre": "app-react-gastos-ingresos",
    "descripcion": "Aplicación en ReactJS para el control de ingresos y gastos, usando paquete victory para la visualización de datos en gráficos, se puede agregar ingresos o gastos y se irá actualizando el monto total, además de mostrar los datos en un gráfico circular.",
    "tecnologias": ["ReactJS", "Javascript", "Css"],
    "repositorio": ["https://github.com/Neira21/app-react-gastos-ingresos"],
    "comentario": "Proyecto personal hecho en react para aprender a usar nuevos pquetes de react, en este caso se usó victory para la visualización de datos en gráficos.",
    "website": ["https://neira21.github.io/app-react-gastos-ingresos"],
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczMo3sQYZvTC3ekLiNWZfrssPaF-1R_knXrc32P3YEFlsJVDrWdLF5KHA5kInsq5GlxosemhmV93gxfScIhCaja3JPC54eKLbUrG8nm391NZOVtGTah_PFFj4OWdb1L9UClaNv3D83xHN2NcgAZpKQ3d_oX-frV7WYFqO5B6tiwnD5_aKPDGZaV2g037ItaK1GuEiCIo4rNLfRjoYcow5yV8LpWQMreKXNMm67oWZwvUbZgVi8hOIPNbgGizS0U9gD5fEJrARbaW42N6KxRGR2GF44yK1mSJXiqCCs2pZ1kPB7SDHOfBBxIfJfHJRIBDT6eq_4ujrvP9YIg_sPn526gjZjQHQcqj4gBm6Z-es6GiQ3TkIW0alUIlEUrAyM0VVxnGmVUJN_kEliaTee_ds4iMpSN4IPP0C9DqNtftqm3pqbuchhtFiPYdUWOqrPvyuzmTky5EHl0cMmezyxFLKCMtLFDALgo_jMh82kJJS0H4RKurQuAB9Fy1Ilo9A15S1pdEr0WkjmBTYNbgHAXul9fROM_hSgCi5cWfoC-noxZmo_UaricRauvu4tl9ch0g4DDzdsHCGWyc_QP3TEcfIVwLQcIQH56WM_AxsTwJfPufSuf65OJwSN9j9KnXJ7Y1PgOHohVdjNRJF88mzs2taqgchr_anT77pvVtR-I9lko_H-ns8nqejI4u0sfJB97HClGCuzq0lpk3yaF60YwTIeMhVoxzBe__OYgv9CkN-3tFJUj2AZhhVvK5P1txRJpNn5jHhy7XdhfYaQj-MGptTurs9bdyzVdjvT8f2DUj3FqSsHKA3j2EotgfWlMhIl78vo1Qcb853f_jwo0P7xm8xMxvQN2_y-PnnOmP_1TuArZhiZiSmQp-icyBcADXc9oJ5BbZk0ub0p9M7_BLxwy7Xyv-RLGPzHZahqbKrekqSe71-37901lJmZgqACA=w1869-h879-s-no-gm?authuser=0"
  },
  {
    "id": 8,
    "nombre": "Advice-generator-app",
    "descripcion": "Generar consejor aleatorios con la api de Advice Slip y se muestra en pantalla. Se utilizó tailwind para los estilos de la aplicación.",
    "tecnologias": ["ReactJS", "tailwind", "Javascript"],
    "repositorio": ["https://github.com/Neira21/Advice-generator-app-Neira21"],
    "comentario": "Challenge de Frontend Mentor, para practicar el uso de tailwind y la implementación de una api en react. Se podría mejorar añadiendo un botón para compartir el consejo en las redes sociales.",
    "website": ["https://neira21.github.io/Advice-generator-app-Neira21/"],
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczOCwv5MnYaDw39dht1zpXCwB93g4zKCRysSfEEwrAuEvtlLHmO4jR9jjkSAKEPgd0s-JVY3MoJIv4f26p0Rfbjvuhtn6V37EUbAZ-WVP6WOi6JKoZkv4QOLmB9dqeAmmFG8sdNbpoNjfiiJk1iB_mCYSraibZNB3CIP5gX-gjy1H0YmDSQ2SH1ReewmV2q-KNmZXWI7YS0AMu9gtUyZYEAKtTQonuKt23RvohBYURWbh0IDw7D4nNiddnXvnx4MPyQNFYRq7TXQ0PVYvNr4isOiJCe-9w8QeKvAtlXFgUFs-gvwNzUlolKZybpeAK9iGIFWpEXrUxoO7Bt4Oq1InwLWs4CkdAVoO73xu5frZ-8XydW0LHAgkdmgTaQjDQxZfnl-0_JkHcxAusAKX33zBD2PJhee80BZVkiqB3A1LEJEytLkAWmEq0GbUm_YX8MCFMj_ucwlwePUnF_H3NOzslIjWQ1lmjo6LRQA9JKXTFRdEt2zsxo-gUHlFp85ci7Jxo9P_X3dfvPGe-p4LLLPay5vsfbT9BwV2Mp2_pQ6Cd34TTYDA66OQK36soQePrsmJZwHbUTGmeYH0sPKTdK3h94sYCcxCNNATXH29cyPs1SB-7iVOygrAHSvAk_YO3vmd5U1IaabMjmk0dZeeGGKMK1nfLZiu4v1BMqmIq1R_txt8aCdeZA_FI34noPydqG672FPWBIZolK6cxw_pCZcgIDeQI8tiP5K7DPLtrqWUpll2lHXf2Pu4deJICHUT2tiaednoP4lJ7cx4cI6Z2wCqPDbB_3gF_Huy5A5Opmz64eoHKOTT5wc5Q33hxSpTZ3DCHHeHYPM06Gd5UoLyJkkVVe5VcTcUYedHS6HWRJhnIlfqJwskyKhCYf2dtZMIKUOnU0jyLmdqSztrZZaAUAEItCPsyin1H6CaJE91wGYoRZcTe00nIVWmt23zlw=w1297-h681-s-no-gm?authuser=0"
  },
  {
    "id": 9,
    "nombre": "Diseños de paginas web con Tailwind",
    "descripcion": "Implementación de un diseño de una página web usando tailwind para los estilos",
    "tecnologias": ["Html", "Css", "tailwind"],
    "repositorio": ["https://github.com/Neira21/News-homepage-Neira21", "https://github.com/Neira21/Sunnyside-agency-landing-page-Neira21", "https://github.com/Neira21/Results-summary-component-Neira21"],
    "comentario": "Challenge de Frontend Mentor, para practicar el uso de tailwind y la implementación de un diseño de una página web. Se podría mejorar añadiendo funcionalidades a la página web, como un formulario de contacto, un login de usuario, entre otros. Cuenta con un diseño responsive.",
    "website": ["https://neira21.github.io/News-homepage-Neira21/", "https://neira21.github.io/Sunnyside-agency-landing-page-Neira21/", "https://neira21.github.io/Results-summary-component-Neira21/"],
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczNU90e86gPzY2SXGnja1jSU1WTSmTBlcDmwyN_G85b8_Q--6YX6kTsTiGvT4vaIU66a5BSzHACETstE6Si8jmU5AmwmMpi4AjTccNhcZzWtAaD0lKxOBPvgN00kJxwRQWASpUBY9yF3SB-a0FwXhVeQrnqx4G1xkD51Y4Smct-e_8lARL5P3r3eTdNHgtRF8xsDEQh1Beg2LQX6gmACBrjp_H_ZnS5plxtEyaVsaux_1d3FH8xOkHAAA44IgpGZ106zULz7qVWWpgIEcOFthaDO5u45F6DjXgkyEEbePTeRjrqhGdy0oygGmeJ448DUK1HUaWoJWQHYSEW-4k_5LyDD2aUduG9LhEnArHPjvSD39c7PfX_JxKpIyON0-IVgh3E-_GncTTFaGaXQsPYRmRzqUz7-QzGTImBl2K5LeOvawuZ0pj3jCIEK6dTgBBR3IdeLtRQDmQ02vBso0DmbJob1bj3-lSacWRNA0FJ1DAHQ_7JVPEPwPnOGj8FguFqls2SQfgeatwglHY7W3MbSskLBar3m5-7Z0LbsWgQNeONi6UYfVty-aHkcmxxznPolJG95rtyNkcmrQ9vMqfKI640_BmX61AwpYi2kIsyBS0psvRbu7_FNWqGtiPvO2QQSBoV5aowybgqCv03Oc9gAqFFVLF9c0LPYpRmj8e0oISNDiYOG_aagKRsHRFo02fMMkTOeI9SHKso-Z-rinc9eaNLLDdwfWwz1GLPCXhtaSVVCno55KoAEKq2Qt80KuBrdsyikF5uCgTc2B7LdAMAL86vwqvX3SBU6W-H1lTlpiXuWJ-HSmoFRAZxbsl_7IkLKoVT-jIkWOGnfauzSDm4rydRa-UqGyXGe8Zdq_HlZhGpJJVcq8ME7msZAKXh871Rkj_CgGMXYsEla_zuSdMnUd3BVOQzJJD8t6qo8j2Ln-a71bO-JMvE_2AvuM7s=w1287-h845-s-no-gm?authuser=0"

  },
  {
    "id": 10,
    "nombre": "ApiRest-movies",
    "descripcion": "Se desarrolló una API REST de películas, con las operaciones CRUD, se puede agregar, eliminar, editar y listar las películas. Se utilizó Nodejs, Express, y el patrón de arquitectura MVC, middlewares, rutas. Se agregó la opción de ejecutar el proyecto de 3 formas usando diferentes bases de datos: MySQL, MongoDB y localmente con un archivo json. Se utilizó zod para la validadión de datos",
    "tecnologias": ["Nodejs", "Javascript", "Express", "mysql", "mongodb", "moongose", "zod"],
    "repositorio": ["https://github.com/Neira21/api-rest-movies-NodeJS"],
    "comentario": "Después de aprender sobre front-end con reactJS, decidí comenzar con backend utilizando NodeJS, por lo que decidí investigar sobre los conceptos básicos de NodeJS y Express. Así que se desarrolló una API Rest sobre películas y hacer un crud",
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczOcji3ofm_xJxbSkQMuuig15QtBgw7tcNEECsc0hdFs2tpfmjeNAR-li_W8iwFGeURDD2IqAS2c30DCH0PQUAgBXogUQ5wKrWiI4Ygo7gjj7ZoIOyAMERT4WIAD5ZS6Lox9_NZj7UMxCwu06qUPmULLtDzYArXjusFN2ptS54sIOLOURqa_Ok7rg2QD_Jj8q60-x52lsnrN8SmQNQsuEv-eanFLJv9PJcmvoxRur_Q8IBbt3QquKLDclwEwuHYUFtbQ5mSiVp9lDShqcWCBd1vBboW6mKWwfXQpcMO_tDnLnxyxOT4fGiC0p03bo3Px4xPm_vE1zxCR_8iQUPj2mi4Egdns2J-LKQ6Qnto4ztdgBHJF-2ndNq0-7wkwAGlRaIu7001MLoEnKPmtisIsm3z61do7ok1d5pDj9AfUsTSS3RLmpSGxB6agWPe1QP0QTWwxvy02rmhesAuJFZUJ6xrFeX8FJkUlrgZ4ADtOiizhj2B7dxbA778o7Gtq3zRNXdF66_IX27G55IQ9346k1gWLC_khmnKLyBvC-6IZ_ickYoYuSrb2N1OM6N9LEsPPQeDrbxLTXW16b93ATmFYbypcbk1C3-RvGRtByWV1hgqErE7av6OUsLUTXVOPENEYHKQ0XFw4t7niqU_tDccIsu7NM4Bel4rU79CeXTs1uQ_Ds_o1wnlGzm1aRuTywMSWxcmUpAaq2qgAhDtOMdR-gBaNBk9ovFaxXDKOiYAYrLXH1KDN7aaZQ-gRrLRJoHpv9kgCnPvYIqCw7ZOSDUtZRPg3MlHoZVOgAzwn_3SfbAr-HE_e4D4vS_6XFTktTqcIoAhCESX6Ssn3eKsXOGE8jaa0yU67-DbX1Gca5cdXBLZ6WvfrOPH7PT66WGDjwC690kM_mgo7Tck5Q2VMZLqaapUmZvtgNcmAkt66NVVbjpJukictFjeg3_0uXw=w1820-h894-s-no-gm?authuser=0"
  },
  {
    "id": 11,
    "nombre": "ApiRest-mongoDB-libros",
    "descripcion": "Api de libros con operaciones CRUD, con mongodb con moongose, uso de docker para la bd, definición de rutas y modelo para los libros.",
    "tecnologias": ["Nodejs", "Javascript", "Express", "mongodb", "Mongoose", "Docker"],
    "repositorio": ["https://github.com/Neira21/ApiRest-mongodb-libros"],
    "comentario": "En esta ocasión se utilizó docker para levantar la base de datos de mongodb y se aprendió a usar mongoose para la conexión a la base de datos y definir el modelo de libro para validaciones, restricciones y realizar las operaciones correspondientes. Se podría mejorar añadiendo más rutas y modelos para la api como usuarios, categorías, entre otros.",
    "imagen": "https://images.prismic.io/turing/652ec1fcfbd9a45bcec8192e_Top_REST_API_Books_to_read_19b582a190.webp?auto=format%2Ccompress&fit=max&w=1920"
  },
  {
    "id": 12,
    "nombre": "crud-react-node-sequelize",
    "descripcion": "Desarrollo de frontend y backend sobre una aplicación de blogs. Operaciones CRUD usando NodeJS, consumo de api usando ReactJS. Se utilizó además Sequelize para el manejo de la base de datos MySQL.",
    "tecnologias": ["ReactJS", "Nodejs", "Express", "mysql", "Sequelize"],
    "repositorio": ["https://github.com/Neira21/crud-react-node-sequelize"],
    "comentario": "Para seguir aprendiendo sobre NodeJS, en este proyecto además de practicar nodeJS haciendo el crud, se desarrolló un frontend en Reactjs para consumir la api. También se aprendió a usar la ORM sequelize para la conexión a la base de datos y definir los modelos de la base de datos.",
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczPF631Dp2DhJ2De9uungBakTytwtCmOKOB5G1Q4R-jd9Zv8OBBeYoVa9fVD4gYFYlicnH6urKFsXfiZqyKftqFwdjDTC-vjK9_yUoosilXyVIrRxkA0PhKFSGK7S1ZKe62pbYa4Km3jvvjT5d7MzTqX800GhWLjHxMGbxEJwj79Bda29oiGZ1_NGlTQnEEpJakalTMQ8GRbdlESswIjZVEinXCPNzA-WJxZY1Ww-BT_iaoCr7b1PPVzj-L6U_JbhDX79D4wZH57izybV66QQ_uIZy7SYA99VydkKOpbOhH9ePlJyG-tFILM2_G4JsHGfOOhdHW5CusFML6bLL18XSfnSU-VBa1gGKFmbMss_pnCy3prCHf6xpjiQ5q3XM6W7W7ogJwfvHnCGYy4xp8sxf1D_FzWtcFcCJ22GY31Kybv_pboNma-FM1DGMHWFmH1YhmpksrBKpsylJXqBLD-cEMRaKd3tHn_lrlVhk2sQBBbN5YQsplma0eqi9RSyPJXlw8mAYBfX5vmI0kF2Rip_9ekBcohlP2HaLqEKlFCIe0b_MOqRRw6dTz618VNYCv2uxKJe-9oDdzZJL2uxoy0abuKuFxk9XayFVchk_TFUXkxymIaUUXvwzQOy14_9mgPhNRjFSKC6xt61sAXQjaklq7Vq5pIO88II_bwmjiOdbsgk5-zeKtF5x5XyAMWvb77I974qpU8WsXPGp7ZOXYRKNWChrgM-rzBfiJFSzWw-F6rx2SRZp2biaWAL6gHOJkd4tZ7kXaEFJL6RvSTD4opN5TXHS34CIslg1W6X_TUHRt8orPM-m4UhP7PrfkF43xITxMQj2gmI7PeyJ3Z5gbiPre9HZAvzN8yV3-QGD-BzvNoQT4vaet_491qQZECfxtebur6nynh05SX0ecBwWkOo1SbY0CFlWDZgA589w89D9s49bblD6FHEd4pT8I=w1809-h894-s-no-gm?authuser=0"
  },
  {
    "id": 13,
    "nombre": "node-chat-websocket",
    "descripcion": "Aplicación de chat en tiempo real, usando NodeJS, Express y Socket.io. Se puede enviar mensajes en tiempo real. Se puede enviar mensajes a todos los usuarios o enviar mensajes privados a un usuario en específico.",
    "tecnologias": ["Nodejs", "Express", "Socket.io", "Javascript"],
    "repositorio": ["https://github.com/Neira21/node-chat-websocket"],
    "comentario": "Este proyecto está siendo desarrollado actualmente, se está aprendiendo a usar socket.io para la comunicación en tiempo real entre el servidor y el cliente.",
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczNNCuBkFjIeH9dszJM93oGgHE839lv8gKCTyqt95ROVtoQqt59JIJ2ZHzmbXLVTatod2w9Ga0wzhSBQHb7Z0xBowTz1rbfkcIKfXmWMsaYjdSZ6zkm_vIhkr062yuknjhh-FB77u_oUjE-THX1bubo0l2L7GOsHFEdCP1UZB-p1aTJr598nhffMFloF_ZgZYnqko7Q9BQ1Pqu3ELlyhsu60NhSeqdiOL7anMp0fpRTI15FeCl58JTzlpvkFk1dXeU_GpVpqhrczQ22JptXazB51RX_ZohaBovMbalcBmgj5SssEzzjOXA6ZTQy6Wf-1ZnTSz4oTnt_AIhhppzWFLddmAzb6_HY_RhnFqlp4ZMYGiyj-R9dOS769lTBAtpJmPXiGMNa-ZmVCpF1TH-iMYEX1t3EVOhrDi0JGnWgpxWdMSJL2qUSDkxk9ZJyHUCmwLqjSIuSyH873nj9PvUxcbq9sRfAuy8tluLTCbJ-1QJS64B_Y5tnUG07-86hlFeiisqxoydlhzzZJHqX7a1V4bKOCqfY1MLmEOQ1wytaHvdrjjRcizOWr91Cpu-7iXwofmuqDJcnvzpn_1NXpqBr6jhAiO1oK40nosY2Pn1x2d58OmCkhK2ysB5QaGehF9ZwegWL2367qQ5NCCrKPuVoyd0BGNt5_a-l9cef2uqDcMFTqj-fEhs96hhuplShniQIrGtWwlIpeIcchhNrUJQcUM4ZPocgV3fyYGM4R8hN9y7Th7FiBHQ6FPt03NnuQP9A6O23gDfyxInw8jN_U-k5huBzK6EEa51Tte6cdaxFdUitGlts-qDoJgsxNNI8J6icyhjvnKMJlXSu5fPpDI6R11sqnBrp2CnmN8DVSraPgT5G-RgaL9sJUT_xBsEtZL5rF5iWvNVBblZgk9JvdMjzNejSYpkW3x4MgK98Xco965fULLqWp7mbv_uX4ceM=w1801-h894-s-no-gm?authuser=0"
  },
  {
    "id": 14,
    "nombre": "node-jsonwebtoken-mysql",
    "descripcion": "Desarrollo de una api con NodeJS, Express y autenticación con JsonWebToken. Se desarrolló un CRUD de usuarios, con la posibilidad de registrar, loguear y obtener los datos del usuario. Se utilizó MySQL para la base de datos y para las vistas se utilizó EJS.",
    "tecnologias": ["express", "Nodejs", "mysql", "jsonwebtoken", "bcryptjs", "EJS"],
    "repositorio": ["https://github.com/Neira21/nodejs-jsonwebtoken-mysql"],
    "comentario": "Para este proyecto se aprendió a usar jsonwebtoken para la autenticación de usuarios, bcryptjs para el cifrado de la contraseña y EJS para las vistas de la aplicación.",
    "imagen": "https://lh3.googleusercontent.com/pw/AP1GczPorOR4BGIE-C71bFPq0N1esqZ3m4QfDq4P4HoZExE2OwO1XRoKh61L7399szeRML2D-Lz1nbfv3ebd__-9Z6DhvRRqd6s_sg-f-Snyx5ow1_yOP4fmdo3ECDshhAKbgQPbUrm-QsYw32P1VR5QkZ3uF8QbHIg-PmxATjMASg5spdR7cWbmn5BGdJUGQcrZuHi8Y_I7kMt1j_CP65i5IP5AbCrHy8j2JGlpXJHmnKfNg57JjGPNsw-hO0p7WgyPoewCoONIDz48XtEoc6kG-e1QhYVAJLnjHG0_D2oZnSXz2qUmgzQ3gsqeOhubT4KJWjzPmtplVytB8D5GOQuy6HJf0ulIHm4fQYxltLj-yVjN_FnokLYUp8s4dB60mFHcNxBeJsjUeDiumrBth-eiwr_rIGZbW723gLLl8NrcNt5H5QQsPK7Nj_eKtaCJSIEkBBTP7yhtcOEOvlKkvdeE7J1qAVVsOxhXqLbBNKAOGxuoTS-XPFfk-opsP4Y3YaMMdyRw6_GuD7LVYHBvSu1MPOw_SdnugIcFqP7VTwY_bg16SXU6TnKVdQ_uCKL3U8JEslTscPMydVuZ-9OGbxPryxyntWQul8NwVG8taj0D1WU4IkG8gZ5yD4sLNITw1g6V_-IOhfxoNn9laqCWtcpd1twAdBwVVi5gIzaFmK_XS1di53sSKiISM10Cz3IKDQ65k2pFMY7bvTIHYbMsLjcJlrjVEiifIx71HdEODonIMj8ooqX-45TeJdKtwKjbuqAGu_tHeg0QlooLTveKnl4VgDrq4jvBDHdzLe0sMDIzKb5pHRcu45B2zBO4Lc3gmxQW5btCei-z_oxIGVM4DeB2GB_Ktt9yG8U6URJtT0L2tRLqjxdIC8U3XnunWJIVpl-AKARgpxqmrqJO6oI_u_ZDD4wSYzuZdg8tJEHloKvU-fFHDFAIplGMAy9y6EU=w1869-h884-s-no-gm?authuser=0"
  }
]